services:
  api-gateway:
    build: 
      dockerfile: ./ApiGateway.WebApi/Dockerfile
      context: .
    image: api-gateway
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - rabbitmq
  
  email-service:
    build: 
      dockerfile: ./EmailNotifications.WebApi/Dockerfile
      context: .
    image: email-service
    ports:
      - "8081:8080"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
        
  notification-status-tracker:
    build: 
      dockerfile: ./NotificationStatusTracker.WebApi/Dockerfile
      context: .
    image: notification-status-tracker
    ports:
      - "8082:8080"
    depends_on:
      - rabbitmq
      - notification-status-tracker-db
    command: ["dotnet", "ef", "database update"]
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=postgres;Server=notification-status-tracker-db;Port=5432;Database=SampleDriverDb; Integrated Security=true;Pooling=true;
    
  notification-status-tracker-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=SampleDriverDb
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - notification-status-tracker-data:/var/lib/postgresql/data
  
  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 1G
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=https://elasticsearh:9200
        
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  elasticsearch-data:
  notification-status-tracker-data: