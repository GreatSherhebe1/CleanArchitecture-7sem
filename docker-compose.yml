services:
  api-gateway:
    build: ApiGateway.WebApi/
    image: api-gateway
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - rabbitmq
  
  email-service:
    build: EmailNotifications.WebApi/
    image: email-service
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
  
  telegram-service:
    build: TelegramNotifications.WebApi/
    image: telegram-service
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 1G
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
  
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=https://elasticsearh:9200
        
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  elasticsearch-data:
    